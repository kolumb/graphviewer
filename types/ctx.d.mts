import type { Vector } from "./vector.mjs";
declare class Ctx {
    static ctx: CanvasRenderingContext2D;
    static fillStyle(style: string): void;
    static strokeStyle(style: string): void;
    static beginPath(): void;
    static closePath(): void;
    static moveTo(v: Vector): void;
    static lineTo(v: Vector): void;
    static quadraticCurveTo(controlPoint: Vector, endPos: Vector): void;
    static bezierCurveTo(controlPoint1: Vector, controlPoint2: Vector, endPos: Vector): void;
    static arc(pos: Vector, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean): void;
    static arcTo(controlPoint1: Vector, controlPoint2: Vector, radius: number): void;
    static ellipse(pos: Vector, radius: Vector, rotation: number, startAngle: number, endAngle: number, counterclockwise: boolean): void;
    static rect(topLeft: Vector, size: Vector): void;
    static lineWidth(width: number): void;
    static lineCap(cap: CanvasLineCap): void;
    static lineJoin(join: CanvasLineJoin): void;
    static miterLimit(limit: number): void;
    static getLineDash(): number[];
    static setLineDash(segments: number[]): void;
    static lineDashOffset(offset: number): void;
    static font(fontDescription: string): void;
    static textAlign(align: CanvasTextAlign): void;
    static textBaseline(baseline: CanvasTextBaseline): void;
    static direction(direction: CanvasDirection): void;
    static clearRect(topLeft: Vector, size: Vector): void;
    static fillRect(topLeft: Vector, size: Vector): void;
    static strokeRect(topLeft: Vector, size: Vector): void;
    static fill(): void;
    static stroke(): void;
    static fillText(text: string, pos: Vector): void;
    static strokeText(text: string, pos: Vector): void;
    static measureText(text: string): TextMetrics;
    static rotate(angle: number): void;
    static scale(v: Vector): void;
    static translate(v: Vector): void;
    static drawImage(image: CanvasImageSource, pos: Vector): void;
    static save(): void;
    static restore(): void;
}
export { Ctx };
